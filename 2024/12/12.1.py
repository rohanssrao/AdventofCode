(grid := [list(l) for l in open(0).read().splitlines()], visited := set(), reachable_points := lambda grid, y, x: (visited.add((y,x)), cells := [c for c in [(y-1,x), (y, x+1), (y+1, x), (y, x-1)] if 0 <= c[0] < len(grid) and 0 <= c[1] < len(grid[0]) and grid[c[0]][c[1]] == grid[y][x] and c not in visited], set([(y,x)]).union(*[reachable_points(grid, c[0], c[1]) for c in cells]) if cells else set([(y,x)]))[-1], regions := set(), [regions.add(frozenset(reachable_points(grid, y, x))) for y in range(len(grid)) for x in range(len(grid[0])) if not any((y,x) in r for r in regions)], print(sum(sum([sum([1 for c in [(y-1,x), (y, x+1), (y+1, x), (y, x-1)] if not(0 <= c[0] < len(grid) and 0 <= c[1] < len(grid[0])) or grid[c[0]][c[1]] != grid[y][x]]) for (y,x) in r]) * len(r) for r in regions)))
